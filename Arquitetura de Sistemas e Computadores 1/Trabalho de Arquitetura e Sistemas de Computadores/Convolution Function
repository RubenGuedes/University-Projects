.data

file2:     .asciiz "lena.gray"              # Ficheiro da imagem em formato GRAY
file3:     .asciiz "lena_hor.gray"        # Ficheiro com a matriz sobel horizontal
file4:     .asciiz "lena_ver.gray"        # Ficheiro com a matriz sobel vertical

bufferGray:         .word    # Espaco para escrever o conteudo da imagem em gray
bufferSobelHori:  .word   # Espaco para escrever o produto da matriz horizontal com a matriz imagem
bufferSobelVert:  .word   # Espaco para escrever o produto da matriz vertical com a matriz imagem

Sobel_vert:  .byte 1,2,1,0,0,0,-1,-2,-1   # Matriz para detetar variacoes de tonalidade na vertical
Sobel_hori:  .byte 1,0,-1,2,0,-2,1,0,-1   # Matriz para detetar variacoes de tonalidade na horizontal


.text	

open_Gray_image:
	la $a0, file2
	li $a1, 0
	li $a2, 0
	li $v0, 13
	syscall
	move $s6, $v0

read_Gray_image:
	move $a0, $s6
	la $a1, bufferGray
	li $a2, 262144
	li $v0, 14
	syscall

close_Gray_image:
	li $v0, 16
	syscall
	
	la $a0, bufferGray
	lb $a1, Sobel_hori
	la $a2, bufferSobelHori
	jal convolution
	nop
	
open_convolution_image:
	la $a0, file3
	li $a1, 1
	li $a2, 0
	li $v0, 13
	syscall
	move $s6, $v0

write_convolution_image:
	move $a0, $s6
	la $a1, bufferSobelHori
	li $a2, 262144
	li $v0, 15
	syscall

close_convolution:
	li $v0, 16
	syscall
	
	j end
	nop

##########################    FUNCAO    ########################

########################################
#  convolution - Vai colocar contornos na imagem
#  a0 - buffer com a matriz imagem em Gray
#  a1 - buffer com operador Sobel Horizontal
#  a2 - buffer com a imagem do operador Horizontal
#  retorna nada
########################################
convolution:
	addi $sp, $sp, -4
	sw $ra, 0($sp) 

	
	li $t9, 0 # contador
	
	#problema: arranjar registo suficientes para guardar a operacao entre a matriz sobel e a matriz imagem
Sobel_Horizontal: 
	lbu $t0, -513($a0)
	lb $t1, 0($a1) #Matriz sobel

	mul $t2, $t0, $t1
	
	addi $a0, $a0, 1
	addi $a1, $a1, 1
	
	lbu $t0, -513($a0)
	lb $t1, 0($a1)
	
	mul $t3, $t0, $t1
	
	addi $a0, $a0, 1
	addi $a1, $a1, 1
	
	lbu $t0, -513($a0)
	lb $t1, 0($a1)
	
	mul $t4, $t0, $t1
	
	add $t5, $t2, $t3
	add $t5, $t5, $t4
	
	#avanca a matriz imagem para a proxima linha
	addi $a0, $a0, 510
	addi $a1, $a1, 1
	
	#continuar a operacao para a segunda linha da matriz imagem
	lbu $t0, -513($a0) # um byte da imagem gray e guardada nop registo $t0
	lb $t1, 0($a1) #Matriz sobel

	mul $t2, $t0, $t1
	
	addi $a0, $a0, 1
	addi $a1, $a1, 1
	
	lbu $t0, -513($a0)
	lb $t1, 0($a1)
	
	mul $t3, $t0, $t1
	
	addi $a0, $a0, 1
	addi $a1, $a1, 1
	
	lbu $t0, -513($a0)
	lb $t1, 0($a1)
	
	mul $t4, $t0, $t1
	
	add $t6, $t2, $t3
	add $t6, $t6, $s4
	
	#avanca a matriz imagem para a proxima linha (3 linha)
	addi $a0, $a0, 510
	addi $a1, $a1, 1
	
	lbu $t0, -513($a0) # um byte da imagem gray e guardada nop registo $t0
	lb $t1, 0($a1) #Matriz sobel

	mul $t2, $t0, $t1
	
	addi $a0, $a0, 1
	addi $a1, $a1, 1
	
	lbu $t0, -513($a0)
	lb $t1, 0($a1)
	
	mul $t3, $t0, $t1
	
	addi $a0, $a0, 1
	addi $a1, $a1, 1
	
	lbu $t0, -513($a0)
	lb $t1, 0($a1)
	
	mul $t4, $t0, $t1
	
	add $t7, $t2, $t3
	add $t7, $t7, $t4
	
	add $t8, $t7, $t6
	add $t8, $t8, $t5
	
	abs $t8, $t8
	div $t8, $t8, 4
	sb $t8, 0($a2)
	
	addi $a0, $a0, -513# retrocedo um byte da linha para aplicar a matriz sobel novamente 
	addi $a1, $a1, -8    # retrocedo a matriz sobel Hozizontal para poder aplica-lo novamente
	addi $a2, $a2, 1   # Avanco um byte no buffer que iremos guardar os bytes

	bne $t9, 260100, Sobel_Horizontal
	addi, $t9, $t9, 1
	

fim_contour:
	lw $ra, 0($sp) 
	addi $sp, $sp, 4
	jr $ra
	nop
	
end:
